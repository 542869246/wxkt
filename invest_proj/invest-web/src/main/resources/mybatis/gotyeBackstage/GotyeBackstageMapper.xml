<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="GotyeBackstageMapper">
	
	<!--表名 -->
	<sql id="tableName">
		GOTYE_BACKSTAGE
	</sql>
	
	<!-- 字段 -->
	<sql id="Field">
		BACKSTAGE_ID,
		TENCENTADMIN,	
		GOTYE_EMAIL,	
		GOTYE_PASSWORD,
		GOTYE_ACCESS_SECRET,
		GOTYE_WX_APPID,	
		GOTYE_WX_SECRET,	
		ALI_DX_APPID,	
		ALI_DX_SECRET,
		ALI_TECODE,
		ALI_SIGN_NAME,
		CHECK_TYPE,
		TENCENTAPPID,
		SECRETID,
		BIZID,
		TXSECRET,
		SECRETKEY
	</sql>
	
	<!-- 字段值 -->
	<sql id="FieldValue">
		#{BACKSTAGE_ID},
		#{TENCENTADMIN},	
		#{GOTYE_EMAIL},	
		#{GOTYE_PASSWORD},	
		#{GOTYE_ACCESS_SECRET},	
		#{GOTYE_WX_APPID},	
		#{GOTYE_WX_SECRET},	
		#{ALI_DX_APPID},	
		#{ALI_DX_SECRET},
		#{ALI_TECODE},
		#{ALI_SIGN_NAME},
		#{CHECK_TYPE},
		#{TENCENTAPPID},
		#{SECRETID},
		#{BIZID},
		#{TXSECRET},
		#{SECRETKEY}
	</sql>
	
	<!-- 新增-->
	<insert id="save" parameterType="pd">
		insert into 
	<include refid="tableName"></include>
		(
	<include refid="Field"></include>
		) values (
	<include refid="FieldValue"></include>
		)
	</insert>
	
	<!-- 删除-->
	<delete id="delete" parameterType="pd">
		delete from
		<include refid="tableName"></include>
		where 
			BACKSTAGE_ID = #{BACKSTAGE_ID}
	</delete>
	
	<!-- 修改 -->
	<update id="edit" parameterType="pd">
		update
		<include refid="tableName"></include>
		set 
			BACKSTAGE_ID = #{BACKSTAGE_ID},
			TENCENTADMIN=#{TENCENTADMIN},
			GOTYE_EMAIL = #{GOTYE_EMAIL},
			GOTYE_PASSWORD = #{GOTYE_PASSWORD},
			GOTYE_ACCESS_SECRET = #{GOTYE_ACCESS_SECRET},
			GOTYE_WX_APPID = #{GOTYE_WX_APPID},
			GOTYE_WX_SECRET = #{GOTYE_WX_SECRET},
			ALI_DX_APPID = #{ALI_DX_APPID},
			ALI_DX_SECRET = #{ALI_DX_SECRET},
			ALI_TECODE=#{ALI_TECODE},
		    ALI_SIGN_NAME=#{ALI_SIGN_NAME},
		    CHECK_TYPE=#{CHECK_TYPE},
		   TENCENTAPPID= #{TENCENTAPPID},
		   SECRETID=#{SECRETID},
		  BIZID=#{BIZID},
			TXSECRET=#{TXSECRET},
		SECRETKEY=#{SECRETKEY}
		where 
		BACKSTAGE_ID = #{BACKSTAGE_ID}
	</update>
	
	<!-- 通过ID获取数据 -->
	<select id="findById" parameterType="pd" resultType="pd">
		select 
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 
			BACKSTAGE_ID = #{BACKSTAGE_ID}
	</select>
	<!-- 获取第一条数据 -->
	<select id="findByOne" parameterType="java.lang.String" resultType="pd">
		select 
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		limit 1
	</select>
	<!-- 列表 -->
	<select id="datalistPage" parameterType="page" resultType="pd">
		select
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 1=1
		<if test="pd.keywords!= null and pd.keywords != ''"><!-- 关键词检索 -->
			and
				(
				<!--	根据需求自己加检索条件
					字段1 LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					 or 
					字段2 LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') 
				-->
				)
		</if>
	</select>
	
	<!-- 列表(全部) -->
	<select id="listAll" parameterType="pd" resultType="pd">
		select
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
	</select>
	
	<!-- 批量删除 -->
	<delete id="deleteAll" parameterType="String">
		delete from
		<include refid="tableName"></include>
		where 
			BACKSTAGE_ID in
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                 #{item}
		</foreach>
	</delete>
				<!-- 通过腾讯账号类型获取数据 -->
	<select id="findByTencent" parameterType="pd" resultType="pd">
		select 
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 
			TENCENTADMIN = #{TENCENTADMIN} limit 1
	</select>
</mapper>