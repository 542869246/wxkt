<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="UserinfoMapper">
	
	<!--表名 -->
	<sql id="tableName">
		WEB_USERINFO
	</sql>
	
	<!-- 字段 -->
	<sql id="Field">
		USERINFO_ID,	
		USER_PHONE,	
		USER_PASSWORD,	
		USER_ROLE_ID,	
		USER_CREATETIME,	
		USER_NICKNAME,	
		USER_PHOTO,	
		USER_STATE,	
		USER_OPPNID,	
		USER_GROUPID
	</sql>
	
	<!-- 字段值 -->
	<sql id="FieldValue">
		#{USERINFO_ID},	
		#{USER_PHONE},	
		#{USER_PASSWORD},	
		#{USER_ROLE_ID},	
		#{USER_CREATETIME},	
		#{USER_NICKNAME},	
		#{USER_PHOTO},	
		#{USER_STATE},	
		#{USER_OPPNID},	
		#{USER_GROUPID}
	</sql>
	
	<!-- 新增-->
	<insert id="save" parameterType="pd">
		insert into 
	<include refid="tableName"></include>
		(
	<include refid="Field"></include>
		) values (
	<include refid="FieldValue"></include>
		)
	</insert>
	
	<!-- 删除-->
	<delete id="delete" parameterType="pd">
		delete from
		<include refid="tableName"></include>
		where 
			USERINFO_ID = #{USERINFO_ID}
	</delete>
	
	<!-- 修改 -->
	<update id="edit" parameterType="pd">
		update
		<include refid="tableName"></include>
		set 
		<!--USER_NICKNAME = #{USER_NICKNAME}, -->
			USER_PHOTO = #{USER_PHOTO}
		where 
		USERINFO_ID = #{USERINFO_ID}
	</update>
	
	<!-- 通过ID获取数据 -->
	<select id="findById" parameterType="pd" resultType="pd">
		SELECT web_userinfo.*,user_level.`LEVEL_NAME` FROM web_userinfo INNER JOIN user_level ON USER_ROLE_ID=LEVEL_ID
		where 
			USERINFO_ID = #{USERINFO_ID}
	</select>
	
	<!-- 通过ID获取数据 -->
	<select id="findByUSER_OPPNID" parameterType="pd" resultType="pd">
		SELECT web_userinfo.*,user_level.`LEVEL_NAME` FROM web_userinfo INNER JOIN user_level ON USER_ROLE_ID=LEVEL_ID
		where 
			USER_OPPNID = #{USER_OPPNID} limit 1
	</select>
	
	
	<!-- 列表 -->
	<select id="datalistPage" parameterType="page" resultType="pd">
		select
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 1=1
		<if test="pd.keywords!= null and pd.keywords != ''"><!-- 关键词检索 -->
			and
				(
				<!--	根据需求自己加检索条件
					字段1 LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					 or 
					字段2 LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') 
				-->
				)
		</if>
	</select>
	
	<!-- 列表(全部) -->
	<select id="listAll" parameterType="pd" resultType="pd">
		select
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
	</select>
	
	<!-- 批量删除 -->
	<delete id="deleteAll" parameterType="String">
		delete from
		<include refid="tableName"></include>
		where 
			USERINFO_ID in
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                 #{item}
		</foreach>
	</delete>
	<!-- 查询用户的存续信息 -->
	<select id="selectAllMessage" parameterType="pd" resultType="pd">
	select DISTINCT aa.* from (
			select dp.*,(select count(READ_ID) from user_read 
				where READ_USER_ID=#{READ_USER_ID}
				and READ_MESSAGEINFO_ID=dp.MESSAGEINFO_ID) readCount from 
				(select * from dep_messageinfo where MESSAGEINFO_PRODUCTS_ID in (
				select INVEST_PRODICTS_ID from user_invest where INVEST_USER_ID=#{READ_USER_ID})) dp
			union all
			select p.*,(select count(READ_ID) from user_read 
				where READ_USER_ID=#{READ_USER_ID}
				and READ_MESSAGEINFO_ID=p.MESSAGEINFO_ID) from dep_messageinfo p 
				where FIND_IN_SET(#{USER_GROUPID},MESSAGEINFO_GROUP_ID)) aa
	</select>
	<!-- 查询系统的消息 -->
	<select id="selectAllSys" parameterType="pd" resultType="pd">
		select sm.*,(select count(read_id) from user_read 
		where READ_USER_ID=#{READ_USER_ID} and READ_MESSAGE_ID=sm.MESSAGE_ID) readcount from SYS_MESSAGE sm
		order by sm.SERVER_CREATETIME desc
	</select>
</mapper>