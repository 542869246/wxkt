<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="WebStudentMapper">
	
	<!--表名 -->
	<sql id="tableName">
		WEB_STUDENT
	</sql>
	
	<!-- 字段 -->
	<sql id="Field">
		STUDENT_ID,	
		STUDENT_NAME,
		PHONE,	
		IMG_SRC,	
		STUDENT_COMMENTS,	
		MODIFYBY,	
		MODIFYDATE,	
		CREATEBY,	
		CREATEDATE
	</sql>
	
	<!-- 字段值 -->
	<sql id="FieldValue">
		#{STUDENT_ID},	
		#{STUDENT_NAME},	
		#{PHONE},	
		#{IMG_SRC},	
		#{STUDENT_COMMENTS},	
		#{MODIFYBY},	
		#{MODIFYDATE},	
		#{CREATEBY},	
		#{CREATEDATE}
	</sql>
	<!-- 新增-->
	<insert id="save" parameterType="pd">
		insert into 
	<include refid="tableName"></include>
		(
	<include refid="Field"></include>
		) values (
	<include refid="FieldValue"></include>
		)
	</insert>
	
	<!-- 删除-->
	<delete id="delete" parameterType="pd">
		delete from
		<include refid="tableName"></include>
		where 
			STUDENT_ID = #{STUDENT_ID}
	</delete>
	
	<!-- 修改 -->
	<update id="edit" parameterType="pd">
		update
		<include refid="tableName"></include>
		set 
			STUDENT_ID = #{STUDENT_ID},
			STUDENT_NAME = #{STUDENT_NAME},
			PHONE = #{PHONE},
			IMG_SRC = #{IMG_SRC},
			STUDENT_COMMENTS = #{STUDENT_COMMENTS},
			MODIFYBY = #{MODIFYBY},
			MODIFYDATE = #{MODIFYDATE},
			CREATEBY = #{CREATEBY},
			CREATEDATE = #{CREATEDATE},
		STUDENT_ID = STUDENT_ID
		where 
		STUDENT_ID = #{STUDENT_ID}
	</update>
	
	<!-- 通过ID获取数据 -->
	<select id="findById" parameterType="pd" resultType="pd">
		select 
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 
			STUDENT_ID = #{STUDENT_ID}
	</select>
	
	<!-- 列表 -->
	<select id="datalistPage" parameterType="page" resultType="pd">
		select
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 1=1
		<if test="pd.keywords!= null and pd.keywords != ''"><!-- 关键词检索 -->
			and
				(
				<!--	根据需求自己加检索条件
					字段1 LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					 or 
					字段2 LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') 
				-->
				)
		</if>
	</select>
	
	<!-- 列表(全部) -->
	<select id="listAll" parameterType="pd" resultType="pd">
		select
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
	</select>
	
	
	<select id="findByPhone"  parameterType="pd" resultType="pd">
		select 
		<include refid="Field"></include>
		from
		<include refid="tableName"></include>
		where PHONE=#{PHONE}
		order by createdate desc limit 1
	</select>
	<select id="findListByPhone"  parameterType="pd" resultType="pd">
		select 
		<include refid="Field"></include>
		from
		<include refid="tableName"></include>
		where PHONE=#{PHONE}
		order by createdate desc 
	</select>
	
	
	<!-- 批量删除 -->
	<delete id="deleteAll" parameterType="String">
		delete from
		<include refid="tableName"></include>
		where 
			STUDENT_ID in
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                 #{item}
		</foreach>
	</delete>
	<select id="findByIdOrderTime" parameterType="pd" resultType="pd">
			select 
		<include refid="Field"></include>
		from
		<include refid="tableName"></include>
		<where>
			<foreach item="item" index="index" collection="list" open="STUDENT_ID in(" separator="," close=")">
                 <if test="#{item.STUDENT_ID != null}">
                 	#{item.STUDENT_ID}
                 </if>
		</foreach>
		</where>
		order by CREATEDATE limit 0,1
	</select>
		<!-- 根据学生Listid查询学生集合 -->
	<select id="findByIdList" parameterType="pd" resultType="pd">
		select
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		<where>
			
			<foreach item="item" index="index" collection="list" open="STUDENT_ID in(" separator="," close=")">
                <if test=" #{item.STUDENT_ID != null}">
                #{item.STUDENT_ID}
                </if>
			</foreach>
		</where>
	</select>
	
<!-- 	根据科目id和老师id、上课时间获取学生信息 -->
	<select id="findBySubAndUser" parameterType="pd" resultType="pd">
		SELECT ss.`lesson_starttime`,ss.`lesson_endtime`,ss.`subject_id`,ws.student_id,ws.student_name,sub.`subject_name`,sc.`classroom_name`,cou.`courses_name` 
		FROM web_student ws
		INNER JOIN web_stu_webuser wsw ON ws.student_id=wsw.student_id
		INNER JOIN web_users wu ON wsw.users_id=wu.users_id
		INNER JOIN school_schedule ss ON wu.`user_id`=ss.teachers_id
		INNER JOIN school_subject sub ON ss.`subject_id`=sub.`subject_id`
		INNER JOIN school_classroom sc ON ss.`classroom_id`=sc.`classroom_id`
		INNER JOIN school_course cou ON ss.`course_id`=cou.`courses_id`
		WHERE ss.subject_id=#{SUBJECT_ID}
		AND ss.teachers_id=#{USER_ID}
		AND ss.`lesson_starttime`=#{TODAY}
	</select>
	
	<!-- 	根据科目id和老师id、上课时间获取未添加能力值学生信息 -->
	<select id="findUnValue" parameterType="pd" resultType="pd">
		SELECT ss.`lesson_starttime`,ss.`lesson_endtime`,ss.`subject_id`,ws.student_id,ws.student_name,sub.`subject_name`,sc.`classroom_name`,cou.`courses_name` 
		FROM web_student ws
		INNER JOIN web_stu_webuser wsw ON ws.`student_id`=wsw.`student_id`
		INNER JOIN web_users wu ON wsw.`users_id`=wu.`users_id`
		INNER JOIN school_schedule ss ON wu.`user_id`=ss.`teachers_id`
		INNER JOIN school_subject sub ON ss.`subject_id`=sub.`subject_id`
		INNER JOIN school_classroom sc ON ss.`classroom_id`=sc.`classroom_id`
		INNER JOIN school_course cou ON ss.`course_id`=cou.`courses_id`
		WHERE wu.`user_id`=#{USER_ID}
		AND ss.`subject_id`=#{SUBJECT_ID}
		AND ss.`lesson_starttime`=#{START_TIME}
		AND ws.`student_id` NOT IN (
			SELECT wa.`student_id` FROM web_ability wa 
			WHERE TO_DAYS(wa.`course_time`)=TO_DAYS(#{TODAY})
			AND wa.`subject_id`=#{SUBJECT_ID}
			GROUP BY wa.`student_id` HAVING COUNT(1)>=9
		)
	</select>
	
</mapper>