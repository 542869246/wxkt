<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="UsersMapper">
	
	<!--表名 -->
	<sql id="tableName">
		WEB_USERS
	</sql>
	
	<!-- 字段 -->
	<sql id="Field">
		USERS_ID,
		USERS_NAME,
		USERS_WECHAT_NICKNAME,	
		USERS_PHONE,	
		USERS_PHOTO,	
		USERS_OPENID,
		USERS_CLASSROOM,	
		USERS_ISMEMBER,
		USERS_WHETHER,
		USERS_STARTTIME,
		USERS_ENDTIME,
		USER_ID,	
		CREATEBY,	
		CREATEDATE,	
		MODIFYBY,	
		MODIFYDATE
	</sql>
	
	<!-- 字段值 -->
	<sql id="FieldValue">
		#{USERS_ID},
		#{USERS_NAME},
		#{USERS_WECHAT_NICKNAME},	
		#{USERS_PHONE},	
		#{USERS_PHOTO},
		#{USERS_CLASSROOM},	
		#{USERS_OPENID},	
		#{USERS_ISMEMBER},
		#{USERS_WHETHER},
		#{USERS_STARTTIME},
		#{USERS_ENDTIME},
		#{USER_ID},
		#{CREATEBY},	
		#{CREATEDATE},	
		#{MODIFYBY},	
		#{MODIFYDATE}
	</sql>
	
	<!-- 新增-->
	<insert id="save" parameterType="pd">
		insert into 
	<include refid="tableName"></include>
		(
	<include refid="Field"></include>
		) values (
	<include refid="FieldValue"></include>
		)
	</insert>
	
	<!-- 删除-->
	<delete id="delete" parameterType="pd">
		delete from
		<include refid="tableName"></include>
		where 
			USERS_ID = #{USERS_ID}
	</delete>
	
	<!-- 修改 -->
	<update id="edit" parameterType="pd">
		update
		<include refid="tableName"></include>
		set 
			USERS_ID = #{USERS_ID},
			USERS_NAME = #{USERS_NAME},
			USERS_PHONE = #{USERS_PHONE},
			USERS_PHOTO = #{USERS_PHOTO},
			USERS_CLASSROOM=#{USERS_CLASSROOM},
			USERS_WHETHER=#{USERS_WHETHER},
			USERS_STARTTIME=#{USERS_STARTTIME},
			USERS_ENDTIME=#{USERS_ENDTIME},
			USER_ID=#{USER_ID}
		where 
		USERS_ID = #{USERS_ID}
	</update>
	
	<!-- 通过ID获取数据 -->
	<select id="findById" parameterType="pd" resultType="pd">
		select 
		W.USERS_ID,
		W.USERS_NAME,
		W.USERS_WECHAT_NICKNAME,	
		W.USERS_PHONE,	
		W.USERS_PHOTO,	
		W.USERS_OPENID,
		W.USERS_CLASSROOM,	
		W.USERS_ISMEMBER,
		W.USERS_WHETHER,
		W.USERS_STARTTIME,
		W.USERS_ENDTIME,
		W.USER_ID,
		S.NAME
		from 
		WEB_USERS W LEFT JOIN SYS_USER S
		ON W.USER_ID=S.USER_ID
		where 
			USERS_ID = #{USERS_ID}
	</select>
	
	<!-- 列表 -->
	<select id="datalistPage" parameterType="page" resultType="pd">
		select
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 1=1
		<if test="pd.keywords!= null and pd.keywords != ''"><!-- 关键词检索 -->
			and
				(
				
					USERS_NAME LIKE CONCAT('%', #{pd.keywords},'%')
					<!--	根据需求自己加检索条件
					 or 
					字段2 LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') 
				-->
				)
				

		</if>
		<if test="pd.users_phone!= null and pd.users_phone != ''"><!-- 根据家长手机号码检索 -->
			and USERS_PHONE LIKE CONCAT('%', #{pd.users_phone},'%')
		</if>
		<if test="pd.STUDENT_ID!= null and pd.STUDENT_ID != ''"><!-- 查找不和此学生有关的家长 -->
			and USERS_ID not in(select USERS_ID FROM WEB_STU_WEBUSER WHERE STUDENT_ID = #{pd.STUDENT_ID})
		</if>
		<if test="pd.isTH != null and pd.isTH!=''">
			<choose>
				<when test="pd.isTH==1">
					and USER_ID is not null AND USER_ID != ''
				</when>
				<when test="pd.isTH==2">
					and USER_ID is null or USER_ID=''
				</when>
			</choose>
		</if>
		<if test="pd.type!=null and pd.type!=''">
			<choose>
			<when test="pd.type ==1">
				<if test="pd.orderby!=null and pd.orderby">
					<if test="pd.orderby==0">
						ORDER BY CONVERT(users_name USING gbk)
					</if>
					<if test="pd.orderby==1">
						ORDER BY CONVERT(users_name USING gbk) desc
					</if>
				</if>
			</when>
			<when test="pd.type ==2">
				<if test="pd.orderby!=null and pd.orderby">
					<if test="pd.orderby==0">
						order by USERS_PHONE
					</if>
					<if test="pd.orderby==1">
						order by USERS_PHONE desc
					</if>
				</if>
			</when>
			</choose>
		</if>
	</select>
	
	<!-- 列表(全部) -->
	<select id="listAll" parameterType="pd" resultType="pd">
		select
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
	</select>
	
	<!-- 批量删除 -->
	<delete id="deleteAll" parameterType="String">
		delete from
		<include refid="tableName"></include>
		where 
			USERS_ID in
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                 #{item}
		</foreach>
	</delete>
	
</mapper>