<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="StudentMapper">
	
	<!--表名 -->
	<sql id="tableName">
		WEB_STUDENT
	</sql>
	
	<!-- 字段 -->
	<sql id="Field">
		STUDENT_ID,	
		STUDENT_NAME,	
		PHONE,	
		IMG_SRC,	
		STUDENT_COMMENTS,	
		MODIFYBY,	
		MODIFYDATE,	
		CREATEBY,	
		CREATEDATE
	</sql>
	
	<!-- 字段值 -->
	<sql id="FieldValue">
		#{STUDENT_ID},	
		#{STUDENT_NAME},	
		#{PHONE},	
		#{IMG_SRC},	
		#{STUDENT_COMMENTS},	
		#{MODIFYBY},	
		#{MODIFYDATE},	
		#{CREATEBY},	
		#{CREATEDATE}
	</sql>
	
	<!-- 新增-->
	<insert id="save" parameterType="pd">
		insert into 
	<include refid="tableName"></include>
		(
	<include refid="Field"></include>
		) values (
	<include refid="FieldValue"></include>
		)
	</insert>
	
	<!-- 删除-->
	<delete id="delete" parameterType="pd">
		delete from
		<include refid="tableName"></include>
		where 
			STUDENT_ID = #{STUDENT_ID}
	</delete>
	
	<!-- 修改 -->
	<update id="edit" parameterType="pd">
		update
		<include refid="tableName"></include>
		set 
			STUDENT_ID = #{STUDENT_ID},
			STUDENT_NAME = #{STUDENT_NAME},
			PHONE = #{PHONE},
			IMG_SRC = #{IMG_SRC},
			STUDENT_COMMENTS = #{STUDENT_COMMENTS},
			MODIFYBY = #{MODIFYBY},
			MODIFYDATE = #{MODIFYDATE},
			CREATEBY = #{CREATEBY},
			CREATEDATE = #{CREATEDATE}
		where 
		STUDENT_ID = #{STUDENT_ID}
	</update>
	
	<!-- 通过ID获取数据 -->
	<select id="findById" parameterType="pd" resultType="pd">
		select 
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 
			STUDENT_ID = #{STUDENT_ID}
	</select>
	
	<!-- 列表 -->
	<select id="datalistPage" parameterType="page" resultType="pd">
		select
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 1=1
		<if test="pd.keywords!= null and pd.keywords != ''"><!-- 关键词检索 -->
			and
				(
				<!--	根据需求自己加检索条件-->
					STUDENT_NAME LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
				)
		</if>
		<if test="pd.USERS_ID!=null and pd.USERS_ID!=''"><!-- 查找不和此家长有关的学生 -->
			and STUDENT_ID not in(select STUDENT_ID FROM WEB_STU_WEBUSER WHERE USERS_ID = #{pd.USERS_ID})
		</if>
		<if test="pd.ATTR_TYPEID!= null and pd.ATTR_TYPEID != ''"><!-- 根据课程选择对应学生 -->
				AND web_student.`student_id` IN
				(
					SELECT student_id FROM school_arrange a WHERE course_id = #{pd.ATTR_TYPEID}
				)
		</if>
		<if test="pd.COURSES_ID!=null and pd.COURSES_ID!=''"><!-- 查找不在此课程的学生 -->
			and STUDENT_ID not in(select STUDENT_ID FROM school_arrange WHERE COURSE_ID = #{pd.COURSES_ID})
		</if>
		<choose>
			<when test="pd.type!=null and pd.type!=''">
				<choose>
					<when test="pd.type ==1">
						<if test="pd.orderby!=null and pd.orderby">
							<choose>
								<when test="pd.orderby==0">
									ORDER BY CONVERT(student_name USING gbk)
								</when>
								<when test="pd.orderby==1">
									ORDER BY CONVERT(student_name USING gbk) desc
								</when>
								<otherwise>
									order by createdate desc
								</otherwise>
							</choose>
						</if>
					</when>
					<when test="pd.type ==2">
						<choose>
							<when test="pd.orderby==0">
								order by PHONE
							</when>
							<when test="pd.orderby==1">
								order by PHONE desc
							</when>
							<otherwise>
								order by createdate desc
							</otherwise>
						</choose>
					</when>
					<otherwise>
						order by createdate desc
					</otherwise>
				</choose>
			</when>
			<otherwise>
				order by createdate desc
			</otherwise>
		</choose>
	</select>
	
	<!-- 列表(全部) -->
	<select id="listAll" parameterType="pd" resultType="pd">
		select
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		 order by createdate desc
	</select>
	
	
	<!-- 批量删除 -->
	<delete id="deleteAll" parameterType="String">
		delete from
		<include refid="tableName"></include>
		where 
			STUDENT_ID in
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                 #{item}
		</foreach>
	</delete>
	
</mapper>