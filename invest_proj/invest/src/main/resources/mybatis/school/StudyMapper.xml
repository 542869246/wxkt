<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="StudyMapper">
	
	<!--表名 -->
	<sql id="tableName">
		WEB_STUDY
	</sql>
	
	<!-- 字段 -->
	<sql id="Field">
		STUDY_ID,	
		SCHEDULE_ID,	
		SUBJECT_ID,	
		STUDY_TIMEDIFF,	
		STUDY_CONTENT,	
		IS_SHOW,
		STUDY_IDS,	
		CREATEBY,	
		CREATEDATE,	
		MODIFYBY,	
		MODIFYDATE
	</sql>
	
	<!-- 字段值 -->
	<sql id="FieldValue">
		#{STUDY_ID},	
		#{SCHEDULE_ID},	
		#{SUBJECT_ID},	
		#{STUDY_TIMEDIFF},	
		#{STUDY_CONTENT},	
		#{IS_SHOW},	
		#{STUDY_IDS},
		#{CREATEBY},	
		#{CREATEDATE},	
		#{MODIFYBY},	
		#{MODIFYDATE}
	</sql>
	
	<!-- 新增-->
	<insert id="save" parameterType="pd">
		insert into 
	<include refid="tableName"></include>
		(
	<include refid="Field"></include>
		) values (
	<include refid="FieldValue"></include>
		)
	</insert>
	
	<!-- 删除-->
	<delete id="delete" parameterType="pd">
		delete from
		<include refid="tableName"></include>
		where 
			STUDY_ID = #{STUDY_ID}
	</delete>
	
	<!-- 批量删除-->
	<delete id="delete_pl" parameterType="pd">
		delete from
		<include refid="tableName"></include>
		where 
			STUDY_IDS = #{STUDY_ID}
	</delete>
	
	<!-- 修改 -->
	<update id="edit" parameterType="pd">
		update
		<include refid="tableName"></include>
		set 
			STUDY_ID = #{STUDY_ID},
			SCHEDULE_ID = #{SCHEDULE_ID},
			SUBJECT_ID = #{SUBJECT_ID},
			STUDY_TIMEDIFF = #{STUDY_TIMEDIFF},
			STUDY_CONTENT = #{STUDY_CONTENT},
			IS_SHOW = #{IS_SHOW},
			CREATEBY = #{CREATEBY},
			CREATEDATE = #{CREATEDATE},
			MODIFYBY = #{MODIFYBY},
			MODIFYDATE = #{MODIFYDATE}
		where 
		STUDY_ID = #{STUDY_ID}
	</update>
	
	<!-- 修改批量 -->
	<update id="edit_pl" parameterType="pd">
		update
		<include refid="tableName"></include>
		set 
			SUBJECT_ID = #{SUBJECT_ID},
			STUDY_TIMEDIFF = #{STUDY_TIMEDIFF},
			STUDY_CONTENT = #{STUDY_CONTENT},
			IS_SHOW = #{IS_SHOW}
		where 
		STUDY_IDS = #{STUDY_IDS} 
	</update>
	
	
	
	<!-- 通过ID获取数据 -->
	<select id="findById" parameterType="pd" resultType="pd">
		select 
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 
			STUDY_ID = #{STUDY_ID}
	</select>
	
	<!-- 通过自定义ID获取不重复数据 -->
	<select id="findByUpdate" parameterType="pd" resultType="pd">
		select 
		distinct SUBJECT_ID,STUDY_TIMEDIFF,IS_SHOW,STUDY_CONTENT,STUDY_IDS
		from 
		WEB_STUDY
		where 
			STUDY_IDS = #{STUDY_ID}
	</select>
	
	
	<!-- 列表 -->
	<select id="datalistPage" parameterType="page" resultType="pd">
		select s.STUDY_ID,s.SCHEDULE_ID,s.SUBJECT_ID,c.SUBJECT_NAME,s.STUDY_TIMEDIFF,s.STUDY_CONTENT,s.IS_SHOW from WEB_STUDY s
		left join school_subject c
		on s.subject_id=c.subject_id
		where 1=1
		<if test="pd.SCHEDULE_ID !=null and pd.SCHEDULE_ID!= ''"><!-- 关键词检索 -->
			and
				(
					SCHEDULE_ID = #{pd.SCHEDULE_ID}
				)
		</if>
	</select>
	
	
	<!-- 查询多个studyId -->
	<select id="searchStudyId" parameterType="String" resultType="String">
		select ws.study_id from web_study ws
		LEFT JOIN school_subject sc
		on ws.subject_id=sc.subject_id
		where 
			ws.SCHEDULE_ID IN
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                 #{item}
		</foreach>
	</select>
	
	<!-- 查询多个日程的内容 -->
	<select id="searchStudy" parameterType="page" resultType="pd">
		select distinct ws.IS_SHOW,ws.STUDY_CONTENT,ws.STUDY_TIMEDIFF,sc.SUBJECT_NAME,ws.STUDY_IDS from web_study ws
		LEFT JOIN school_subject sc
		on ws.subject_id=sc.subject_id
		where 
			ws.SCHEDULE_ID IN
		<foreach item="item" index="index" collection="pd.string" open="(" separator="," close=")">
                 #{item}
		</foreach>
	</select>
	
	
	
	
	<!-- 列表(全部) -->
	<select id="listAll" parameterType="pd" resultType="pd">
		select
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
	</select>
	
	<!-- 批量删除 -->
	<delete id="deleteAll" parameterType="String">
		delete from
		<include refid="tableName"></include>
		where 
			STUDY_ID in
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                 #{item}
		</foreach>
	</delete>
	
</mapper>